global:
  scrape_interval: 5s
  evaluation_interval: 5s
rule_files:
  - /etc/prometheus/alert_rules.yaml
  - /etc/prometheus/kube_prometheus_alert_rules.yaml
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - alertmanager:9093
scrape_configs:
  - job_name: "prometheus"
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ["monitoring"]
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
        action: keep
        regex: prometheus
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: ${1}
        target_label: __address__
  - job_name: "alertmanager"
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ["monitoring"]
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
        action: keep
        regex: alertmanager
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: ${1}
        target_label: __address__
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names: ["default"]
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: kubernetes;https
    - source_labels: [__name__]
      action: drop
      regex: apiserver_request_duration_seconds.*
    - source_labels: [__name__]
      action: drop
      regex: apiserver_request_latencies.*
  - job_name: 'kubernetes-nodes'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_cke_cybozu_com_(.+)
        replacement: cke_${1}
      - action: labelmap
        regex: __meta_kubernetes_node_label_sabakan_cke_cybozu_com_(.+)
        replacement: sabakan_${1}
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics
      - source_labels: [__name__]
        action: drop
        regex: kubelet_runtime_operations_duration_seconds.*
  - job_name: 'kubernetes-cadvisor'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
  - job_name: "kube-state-metrics"
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names: ["kube-system"]
    relabel_configs:
      - action: keep
        source_labels: [__meta_kubernetes_service_name]
        regex: "kube-state-metrics"
      - source_labels: [__meta_kubernetes_service_port_name]
        action: keep
        regex: (http-metrics|telemetry)
  - job_name: 'node-exporter'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: ["monitoring"]
    relabel_configs:
      - action: keep
        source_labels: [__meta_kubernetes_endpoints_name]
        regex: prometheus-node-targets
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name
      - source_labels: [__name__]
        action: drop
        regex: node_cpu_seconds_total
  - job_name: 'bootserver-etcd'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: ["monitoring"]
    relabel_configs:
      - action: keep
        source_labels: [__meta_kubernetes_endpoints_name]
        regex: bootserver-etcd-metrics
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name
  - job_name: "metallb"
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ["metallb-system"]
    relabel_configs:
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: ${1}
        target_label: __address__
  - job_name: "argocd"
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names: ["argocd"]
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: argocd-metrics
  - job_name: "cke-etcd"
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: ["kube-system"]
    relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        action: keep
        regex: cke-etcd
      - source_labels: [__address__]
        action: replace
        regex: ([^:]+)(?::\d+)?
        replacement: ${1}
        target_label: __address__
  - job_name: "calico-node"
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ["kube-system"]
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
        action: keep
        regex: calico-node
      - source_labels: [__address__]
        action: replace
        regex: ([^:]+)(?::\d+)?
        replacement: ${1}
        target_label: __address__
  - job_name: "monitor-hw"
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: ["monitoring"]
    relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        action: keep
        regex: prometheus-node-targets
      - source_labels: [__address__]
        action: replace
        regex: ([^:]+)(?::\d+)?
        replacement: ${1}
        target_label: __address__
  - job_name: "contour"
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names: ["ingress"]
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: contour-metrics
      - source_labels: [__meta_kubernetes_service_port_name]
        action: keep
        regex: contour-metrics
  - job_name: "envoy"
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: ["ingress"]
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: contour-metrics
      - source_labels: [__meta_kubernetes_service_port_name]
        action: keep
        regex: envoy-metrics
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        target_label: __metrics_path__
  - job_name: "ingress"
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ["ingress"]
    relabel_configs:
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: ${1}
        target_label: __address__
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        target_label: __metrics_path__
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_format]
        target_label: __param_format
  - job_name: "external-dns"
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names: ["external-dns"]
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: external-dns-metrics
  - job_name: "teleport"
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ["teleport"]
    relabel_configs:
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: ${1}
        target_label: __address__

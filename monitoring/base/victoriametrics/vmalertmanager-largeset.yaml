apiVersion: operator.victoriametrics.com/v1beta1
kind: VMAlertmanager
metadata:
  name: vmalertmanager-largeset
  namespace: monitoring
spec:
  replicaCount: 3
  # VMAlertmanager is able to detect configSecret content change and to reload alertmanager.
  # We don't need to use secretGenerator for alertmanager.yaml unlike monitoring/base/alertmanager/deployment.yaml
  configSecret: vmalertmanager-config
  # However, it is not able to detect configMap content change. So use another configmap-reload container.
  # Note that we don't use VMAlertmanager.spec.configMaps because they use name of ConfigMap as mount point.
  # We need a common mount point for largeset and smallset.
  volumeMounts:
    - name: alertmanager-config-volume
      mountPath: /etc/vm/configs/vmalertmanager
    - name: vmalertmanager-settype
      mountPath: /etc/vm/configs/vmalertmanager-settype
  volumes:
    - name: alertmanager-config-volume
      configMap:
        name: vmalertmanager
    - name: vmalertmanager-settype
      configMap:
        name: vmalertmanager-settype-largeset
  containers:
    - name: configmap-reloader
      image: quay.io/cybozu/configmap-reload:0.5.0.1
      imagePullPolicy: IfNotPresent
      args:
        - -webhook-url=http://127.0.0.1:9093/-/reload
        - -volume-dir=/etc/vm/configs/vmalertmanager
        - -volume-dir=/etc/vm/configs/vmalertmanager-settype
        - -web.listen-address=:9534
      volumeMounts:
        - name: alertmanager-config-volume
          mountPath: /etc/vm/configs/vmalertmanager
          readOnly: true
        - name: vmalertmanager-settype
          mountPath: /etc/vm/configs/vmalertmanager-settype
          readOnly: true
      resources:
        limits:
          cpu: 100m
          memory: 25Mi
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
  storage:
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: topolvm-provisioner
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: monitoring
              # do not specify app.kubernetes.io/instance to make large set repel each other
              app.kubernetes.io/name: vmalertmanager
              managed-by: vm-operator
        - topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: monitoring
              # rule1: vmsingle-smallset and vmalertmanager-smallset place in the same node.
              # rule2: avoid placing vmalertmanager-smallset and vmalertmanager-largest in the same node.
              # to satisfy rule1 and 2: vmsingle-smallset and vmalertmanager-largest are place in the different node.
              app.kubernetes.io/instance: vmsingle-smallset
              managed-by: vm-operator
  podDisruptionBudget:
    minAvailable: 2

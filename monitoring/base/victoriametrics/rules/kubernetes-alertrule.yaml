# NOTE: most of the rules are downloaded from the following link:
# https://github.com/prometheus-operator/kube-prometheus/blob/master/manifests/kubernetes-prometheusRule.yaml
# The following Apache License is kube-prometheus's one.

# Apache License
#                           Version 2.0, January 2004
#                        http://www.apache.org/licenses/
#
#   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
#
#   1. Definitions.
#
#      "License" shall mean the terms and conditions for use, reproduction,
#      and distribution as defined by Sections 1 through 9 of this document.
#
#      "Licensor" shall mean the copyright owner or entity authorized by
#      the copyright owner that is granting the License.
#
#      "Legal Entity" shall mean the union of the acting entity and all
#      other entities that control, are controlled by, or are under common
#      control with that entity. For the purposes of this definition,
#      "control" means (i) the power, direct or indirect, to cause the
#      direction or management of such entity, whether by contract or
#      otherwise, or (ii) ownership of fifty percent (50%) or more of the
#      outstanding shares, or (iii) beneficial ownership of such entity.
#
#      "You" (or "Your") shall mean an individual or Legal Entity
#      exercising permissions granted by this License.
#
#      "Source" form shall mean the preferred form for making modifications,
#      including but not limited to software source code, documentation
#      source, and configuration files.
#
#      "Object" form shall mean any form resulting from mechanical
#      transformation or translation of a Source form, including but
#      not limited to compiled object code, generated documentation,
#      and conversions to other media types.
#
#      "Work" shall mean the work of authorship, whether in Source or
#      Object form, made available under the License, as indicated by a
#      copyright notice that is included in or attached to the work
#      (an example is provided in the Appendix below).
#
#      "Derivative Works" shall mean any work, whether in Source or Object
#      form, that is based on (or derived from) the Work and for which the
#      editorial revisions, annotations, elaborations, or other modifications
#      represent, as a whole, an original work of authorship. For the purposes
#      of this License, Derivative Works shall not include works that remain
#      separable from, or merely link (or bind by name) to the interfaces of,
#      the Work and Derivative Works thereof.
#
#      "Contribution" shall mean any work of authorship, including
#      the original version of the Work and any modifications or additions
#      to that Work or Derivative Works thereof, that is intentionally
#      submitted to Licensor for inclusion in the Work by the copyright owner
#      or by an individual or Legal Entity authorized to submit on behalf of
#      the copyright owner. For the purposes of this definition, "submitted"
#      means any form of electronic, verbal, or written communication sent
#      to the Licensor or its representatives, including but not limited to
#      communication on electronic mailing lists, source code control systems,
#      and issue tracking systems that are managed by, or on behalf of, the
#      Licensor for the purpose of discussing and improving the Work, but
#      excluding communication that is conspicuously marked or otherwise
#      designated in writing by the copyright owner as "Not a Contribution."
#
#      "Contributor" shall mean Licensor and any individual or Legal Entity
#      on behalf of whom a Contribution has been received by Licensor and
#      subsequently incorporated within the Work.
#
#   2. Grant of Copyright License. Subject to the terms and conditions of
#      this License, each Contributor hereby grants to You a perpetual,
#      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
#      copyright license to reproduce, prepare Derivative Works of,
#      publicly display, publicly perform, sublicense, and distribute the
#      Work and such Derivative Works in Source or Object form.
#
#   3. Grant of Patent License. Subject to the terms and conditions of
#      this License, each Contributor hereby grants to You a perpetual,
#      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
#      (except as stated in this section) patent license to make, have made,
#      use, offer to sell, sell, import, and otherwise transfer the Work,
#      where such license applies only to those patent claims licensable
#      by such Contributor that are necessarily infringed by their
#      Contribution(s) alone or by combination of their Contribution(s)
#      with the Work to which such Contribution(s) was submitted. If You
#      institute patent litigation against any entity (including a
#      cross-claim or counterclaim in a lawsuit) alleging that the Work
#      or a Contribution incorporated within the Work constitutes direct
#      or contributory patent infringement, then any patent licenses
#      granted to You under this License for that Work shall terminate
#      as of the date such litigation is filed.
#
#   4. Redistribution. You may reproduce and distribute copies of the
#      Work or Derivative Works thereof in any medium, with or without
#      modifications, and in Source or Object form, provided that You
#      meet the following conditions:
#
#      (a) You must give any other recipients of the Work or
#          Derivative Works a copy of this License; and
#
#      (b) You must cause any modified files to carry prominent notices
#          stating that You changed the files; and
#
#      (c) You must retain, in the Source form of any Derivative Works
#          that You distribute, all copyright, patent, trademark, and
#          attribution notices from the Source form of the Work,
#          excluding those notices that do not pertain to any part of
#          the Derivative Works; and
#
#      (d) If the Work includes a "NOTICE" text file as part of its
#          distribution, then any Derivative Works that You distribute must
#          include a readable copy of the attribution notices contained
#          within such NOTICE file, excluding those notices that do not
#          pertain to any part of the Derivative Works, in at least one
#          of the following places: within a NOTICE text file distributed
#          as part of the Derivative Works; within the Source form or
#          documentation, if provided along with the Derivative Works; or,
#          within a display generated by the Derivative Works, if and
#          wherever such third-party notices normally appear. The contents
#          of the NOTICE file are for informational purposes only and
#          do not modify the License. You may add Your own attribution
#          notices within Derivative Works that You distribute, alongside
#          or as an addendum to the NOTICE text from the Work, provided
#          that such additional attribution notices cannot be construed
#          as modifying the License.
#
#      You may add Your own copyright statement to Your modifications and
#      may provide additional or different license terms and conditions
#      for use, reproduction, or distribution of Your modifications, or
#      for any such Derivative Works as a whole, provided Your use,
#      reproduction, and distribution of the Work otherwise complies with
#      the conditions stated in this License.
#
#   5. Submission of Contributions. Unless You explicitly state otherwise,
#      any Contribution intentionally submitted for inclusion in the Work
#      by You to the Licensor shall be under the terms and conditions of
#      this License, without any additional terms or conditions.
#      Notwithstanding the above, nothing herein shall supersede or modify
#      the terms of any separate license agreement you may have executed
#      with Licensor regarding such Contributions.
#
#   6. Trademarks. This License does not grant permission to use the trade
#      names, trademarks, service marks, or product names of the Licensor,
#      except as required for reasonable and customary use in describing the
#      origin of the Work and reproducing the content of the NOTICE file.
#
#   7. Disclaimer of Warranty. Unless required by applicable law or
#      agreed to in writing, Licensor provides the Work (and each
#      Contributor provides its Contributions) on an "AS IS" BASIS,
#      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
#      implied, including, without limitation, any warranties or conditions
#      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
#      PARTICULAR PURPOSE. You are solely responsible for determining the
#      appropriateness of using or redistributing the Work and assume any
#      risks associated with Your exercise of permissions under this License.
#
#   8. Limitation of Liability. In no event and under no legal theory,
#      whether in tort (including negligence), contract, or otherwise,
#      unless required by applicable law (such as deliberate and grossly
#      negligent acts) or agreed to in writing, shall any Contributor be
#      liable to You for damages, including any direct, indirect, special,
#      incidental, or consequential damages of any character arising as a
#      result of this License or out of the use or inability to use the
#      Work (including but not limited to damages for loss of goodwill,
#      work stoppage, computer failure or malfunction, or any and all
#      other commercial damages or losses), even if such Contributor
#      has been advised of the possibility of such damages.
#
#   9. Accepting Warranty or Additional Liability. While redistributing
#      the Work or Derivative Works thereof, You may choose to offer,
#      and charge a fee for, acceptance of support, warranty, indemnity,
#      or other liability obligations and/or rights consistent with this
#      License. However, in accepting such obligations, You may act only
#      on Your own behalf and on Your sole responsibility, not on behalf
#      of any other Contributor, and only if You agree to indemnify,
#      defend, and hold each Contributor harmless for any liability
#      incurred by, or claims asserted against, such Contributor by reason
#      of your accepting any such warranty or additional liability.
#
#   END OF TERMS AND CONDITIONS
#
#   APPENDIX: How to apply the Apache License to your work.
#
#      To apply the Apache License to your work, attach the following
#      boilerplate notice, with the fields enclosed by brackets "{}"
#      replaced with your own identifying information. (Don't include
#      the brackets!)  The text should be enclosed in the appropriate
#      comment syntax for the file format. We also recommend that a
#      file or class name and description of purpose be included on the
#      same "printed page" as the copyright notice for easier
#      identification within third-party archives.
#
#   Copyright {yyyy} {name of copyright owner}
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

apiVersion: operator.victoriametrics.com/v1beta1
kind: VMRule
metadata:
  name: kubernetes
  namespace: monitoring
spec:
  groups:
    - name: kubernetes-absent
      rules:
        - alert: KubeStateMetricsDown
          annotations:
            summary: KubeStateMetrics has disappeared from Prometheus target discovery.
            runbook: TBD
          expr: |
            absent(up{job="kube-state-metrics"} == 1)
          for: 15m
          labels:
            severity: error
        - alert: KubernetesCAdvisorDown
          expr: |
            absent(up{job="kubernetes-cadvisor"} == 1)
          labels:
            severity: error
          for: 10m
          annotations:
            summary: KubernetesCAdvisor has disappeared from Prometheus target discovery.
            runbook: Please consider to find root causes, and solve the problems
        - alert: KubernetesNodesDown
          expr: |
            absent(up{job="kubernetes-nodes"} == 1)
          labels:
            severity: critical
          for: 10m
          annotations:
            summary: KubernetesNodes has disappeared from Prometheus target discovery.
            runbook: Please consider to find root causes, and solve the problems
        - alert: KubeControllerManagerDown
          annotations:
            message: KubeControllerManager has disappeared from Prometheus target discovery.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontrollermanagerdown
          expr: |
            absent(up{job="kube-controller-manager"} == 1)
          for: 10m
          labels:
            severity: critical
        - alert: KubeSchedulerDown
          annotations:
            message: KubeScheduler has disappeared from Prometheus target discovery.
            runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeschedulerdown
          expr: |
            absent(up{job="kube-scheduler"} == 1)
          for: 10m
          labels:
            severity: critical
    - name: kubernetes-apps
      rules:
        - alert: KubePodCrashLooping
          annotations:
            summary: Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container
              }}) is restarting {{ printf "%.2f" $value }} times / 5 minutes.
            runbook: TBD
          expr: |
            rate(kube_pod_container_status_restarts_total{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}[5m]) * 60 * 5 > 0
          for: 15m
          labels:
            severity: error
        - alert: KubePodNotReady
          annotations:
            summary: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready
              state for longer than 30 minutes.
            runbook: TBD
          expr: |
            sum by (namespace, pod) (kube_pod_status_phase{job="kube-state-metrics", phase=~"Failed|Pending|Unknown",namespace!~"app-.+|maneki|sandbox"} * on(namespace, pod) group_left(owner_kind) kube_pod_owner{owner_kind!="Job"}) > 0
          for: 30m
          labels:
            severity: error
        - alert: KubePodScheduledNotReady
          annotations:
            summary: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready
              state though scheduled for longer than 15 minutes.
            runbook: TBD
          expr: |
            sum by (namespace, pod) (kube_pod_status_phase{job="kube-state-metrics", phase=~"Failed|Pending|Unknown",namespace!~"app-.+|maneki|sandbox"} * on(namespace, pod) group_left(owner_kind) kube_pod_owner{owner_kind!="Job"} and on(namespace,pod) kube_pod_info{job="kube-state-metrics",node!=""}) > 0
          for: 15m
          labels:
            severity: error
        - alert: KubePodNotReadyWithContainersReady
          annotations:
            summary: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready
              state though containers are in a ready state for longer than 30 minutes.
            runbook: TBD
          expr: |
            min by(namespace, pod) (kube_pod_container_status_ready{namespace!~"app-.+|maneki|sandbox"})
              * on(namespace, pod) kube_pod_status_ready{condition="false"}
              * on(namespace, pod) group_left(owner_kind) kube_pod_owner{owner_kind!="Job"} > 0
          for: 30m
          labels:
            severity: error
            frequency: daily
        - alert: KubeDeploymentGenerationMismatch
          annotations:
            summary: Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment
              }} does not match, this indicates that the Deployment has failed but has
              not been rolled back.
            runbook: TBD
          expr: |
            kube_deployment_status_observed_generation{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
              !=
            kube_deployment_metadata_generation{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
          for: 15m
          labels:
            severity: error
        - alert: KubeDeploymentReplicasMismatch
          annotations:
            summary: Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has not
              matched the expected number of replicas for longer than 30 minutes.
            runbook: TBD
          expr: |
            kube_deployment_spec_replicas{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
              !=
            kube_deployment_status_replicas_available{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
          for: 30m
          labels:
            severity: error
            frequency: daily
        - alert: KubeStatefulSetReplicasMismatch
          annotations:
            summary: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has
              not matched the expected number of replicas for longer than 30 minutes.
            runbook: TBD
          expr: |
            kube_statefulset_status_replicas_ready{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
              !=
            kube_statefulset_status_replicas{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
          for: 30m
          labels:
            severity: error
            frequency: daily
        - alert: KubeStatefulSetGenerationMismatch
          annotations:
            summary: StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset
              }} does not match, this indicates that the StatefulSet has failed but has
              not been rolled back.
            runbook: TBD
          expr: |
            kube_statefulset_status_observed_generation{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
              !=
            kube_statefulset_metadata_generation{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
          for: 15m
          labels:
            severity: error
        - alert: KubeStatefulSetUpdateNotRolledOut
          annotations:
            summary: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update
              has not been rolled out.
            runbook: TBD
          expr: |
            max without (revision) (
              kube_statefulset_status_current_revision{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
                unless
              kube_statefulset_status_update_revision{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
            )
              *
            (
              kube_statefulset_replicas{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
                !=
              kube_statefulset_status_replicas_updated{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
            )
          for: 15m
          labels:
            severity: error
        - alert: KubeDaemonSetRolloutStuck
          annotations:
            summary: Only {{ $value }}% of the desired Pods of DaemonSet {{ $labels.namespace
              }}/{{ $labels.daemonset }} are scheduled and ready.
            runbook: TBD
          expr: |
            kube_daemonset_status_number_ready{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
              /
            kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"} * 100 < 100
          for: 1h
          labels:
            severity: error
        - alert: KubeDaemonSetNotScheduled
          annotations:
            summary: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset
            }} are not scheduled.'
            runbook: TBD
          expr: |
            kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}
              -
            kube_daemonset_status_current_number_scheduled{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"} > 0
          for: 1h
          labels:
            severity: error
        - alert: KubeDaemonSetReplicasMismatch
          annotations:
            summary: DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not
              matched the expected number of replicas for longer than 30 minutes.
            runbook: TBD
          expr: |
            kube_daemonset_status_number_unavailable{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"} != 0
          for: 1h
          labels:
            severity: error
            frequency: daily
        - alert: KubeCronJobRunning
          annotations:
            summary: CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is taking more
              than 1h to complete.
            runbook: TBD
          expr: |
            time() - kube_cronjob_next_schedule_time{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"} > 3600
          for: 1h
          labels:
            severity: warning
        - alert: KubeJobCompletion
          annotations:
            summary: Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more
              than one hour to complete.
            runbook: TBD
          expr: |
            kube_job_spec_completions{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"} - kube_job_status_succeeded{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}  > 0
          for: 1h
          labels:
            severity: warning
        - alert: KubeJobFailed
          annotations:
            summary: Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete.
            runbook: TBD
          expr: |
            kube_job_failed{job="kube-state-metrics",namespace!~"app-.+|maneki|sandbox"}  > 0
          for: 15m
          labels:
            severity: error
    - name: kubernetes-system
      rules:
        - alert: KubeNodeNotReady
          annotations:
            summary: '{{ $labels.node }} has been unready for more than 15 minutes.'
            runbook: TBD
          expr: |
            (kube_node_status_condition{job="kube-state-metrics",condition="Ready",status="true"} == 0) and ignoring(condition,status) (kube_node_spec_unschedulable{job="kube-state-metrics"} == 0)
          for: 15m
          labels:
            severity: error
        - alert: KubeNodeUnschedulable
          annotations:
            summary: '{{ $labels.node }} has been unschedulable for more than 1 hour.'
            runbook: TBD
          expr: |
            kube_node_spec_unschedulable{job="kube-state-metrics"} == 1
          for: 1h
          labels:
            severity: error
        - alert: KubeVersionMismatch
          annotations:
            summary: There are {{ $value }} different semantic versions of Kubernetes
              components running.
            runbook: TBD
          expr: |
            count(count by (gitVersion) (label_replace(kubernetes_build_info{job="kubernetes-nodes"},"gitVersion","$1","gitVersion","(v[0-9]*.[0-9]*.[0-9]*).*"))) > 1
          for: 15m
          labels:
            severity: warning
        - alert: KubeClientErrors
          annotations:
            summary: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance }}' is experiencing {{ printf "%0.0f" $value }}% errors.
            runbook: TBD
          expr: |
            (sum(rate(rest_client_requests_total{code=~"5.."}[5m])) by (instance, job)
              /
            sum(rate(rest_client_requests_total[5m])) by (instance, job))
            * 100 > 1
          for: 15m
          labels:
            severity: warning
        - alert: KubeletTooManyPods
          annotations:
            summary: Kubelet '{{ $labels.node }}' is running at {{ printf "%.4g" $value
              }}% of its Pod capacity.
            runbook: TBD
          expr: |
            100 * max(max(kubelet_running_pods{job="kubernetes-nodes"}) by(instance) * on(instance) group_left(node) kubelet_node_name{job="kubernetes-nodes"}) by(node) / max(kube_node_status_capacity_pods{job="kube-state-metrics"}) by(node) > 95
          for: 15m
          labels:
            severity: error
        - alert: KubeAPILatencyHigh
          annotations:
            summary: The API server has a 99th percentile latency of {{ $value }} seconds
              for {{ $labels.verb }} {{ $labels.resource }}.
            runbook: TBD
          expr: |
            cluster_quantile:apiserver_request_duration_seconds:histogram_quantile{job="kubernetes-apiservers",quantile="0.99",subresource!="log",verb!~"^(?:LIST|WATCH|WATCHLIST|PROXY|CONNECT)$"} > 1
          for: 10m
          labels:
            severity: warning
        - alert: KubeAPILatencyHigh
          annotations:
            summary: The API server has a 99th percentile latency of {{ $value }} seconds
              for {{ $labels.verb }} {{ $labels.resource }}.
            runbook: TBD
          expr: |
            cluster_quantile:apiserver_request_duration_seconds:histogram_quantile{job="kubernetes-apiservers",quantile="0.99",subresource!="log",verb!~"^(?:LIST|WATCH|WATCHLIST|PROXY|CONNECT)$"} > 4
          for: 10m
          labels:
            severity: error
        - alert: KubeAPIErrorsHigh
          annotations:
            summary: API server is returning errors for {{ $value }}% of requests.
            runbook: TBD
          expr: |
            sum(rate(apiserver_request_total{job="kubernetes-apiservers",code=~"^(?:5..)$"}[5m]))
              /
            sum(rate(apiserver_request_total{job="kubernetes-apiservers"}[5m])) * 100 > 3
          for: 10m
          labels:
            severity: critical
        - alert: KubeAPIErrorsHigh
          annotations:
            summary: API server is returning errors for {{ $value }}% of requests.
            runbook: TBD
          expr: |
            sum(rate(apiserver_request_total{job="kubernetes-apiservers",code=~"^(?:5..)$"}[5m]))
              /
            sum(rate(apiserver_request_total{job="kubernetes-apiservers"}[5m])) * 100 > 1
          for: 10m
          labels:
            severity: error
        - alert: KubeAPIErrorsHigh
          annotations:
            summary: API server is returning errors for {{ $value }}% of requests for
              {{ $labels.verb }} {{ $labels.resource }} {{ $labels.subresource }}.
            runbook: TBD
          expr: |
            sum(rate(apiserver_request_total{job="kubernetes-apiservers",code=~"^(?:5..)$"}[5m])) by (resource,subresource,verb)
              /
            sum(rate(apiserver_request_total{job="kubernetes-apiservers"}[5m])) by (resource,subresource,verb) * 100 > 10
          for: 10m
          labels:
            severity: error
        - alert: KubeAPIErrorsHigh
          annotations:
            summary: API server is returning errors for {{ $value }}% of requests for
              {{ $labels.verb }} {{ $labels.resource }} {{ $labels.subresource }}.
            runbook: TBD
          expr: |
            sum(rate(apiserver_request_total{job="kubernetes-apiservers",code=~"^(?:5..)$"}[5m])) by (resource,subresource,verb)
              /
            sum(rate(apiserver_request_total{job="kubernetes-apiservers"}[5m])) by (resource,subresource,verb) * 100 > 5
          for: 10m
          labels:
            severity: error
        - alert: KubeClientCertificateExpiration
          annotations:
            summary: A client certificate used to authenticate to the apiserver is expiring
              in less than 7.0 days.
            runbook: TBD
          expr: |
            apiserver_client_certificate_expiration_seconds_count{job="kubernetes-apiservers"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="kubernetes-apiservers"}[5m]))) < 604800
          labels:
            severity: error
        - alert: KubeClientCertificateExpiration
          annotations:
            summary: A client certificate used to authenticate to the apiserver is expiring
              in less than 24.0 hours.
            runbook: TBD
          expr: |
            apiserver_client_certificate_expiration_seconds_count{job="kubernetes-apiservers"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="kubernetes-apiservers"}[5m]))) < 86400
          labels:
            severity: error
        - alert: K8sAPIServersDegraded
          expr: count(up{job="kubernetes-apiservers"} == 1) < 3
          labels:
            severity: warning
          for: 15m
          annotations:
            summary: The number of kube-apiserver is less than 3.
            runbook: Please consider to find root causes, and solve the problems
        - alert: K8sAPIServersDegraded
          expr: absent(up{job="kubernetes-apiservers"} == 1)
          labels:
            severity: critical
          for: 10m
          annotations:
            summary: No kube-apiserver is running.
            runbook: Please consider to find root causes, and solve the problems
        - alert: PersistentVolumeSpaceExceeded
          expr: kubelet_volume_stats_used_bytes{namespace!~"app-.+|maneki|sandbox"} / kubelet_volume_stats_capacity_bytes{namespace!~"app-.+|maneki|sandbox"} > 0.90
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: Disk usage of `{{ $labels.persistentvolumeclaim }}, {{ $labels.namespace }}` is more than 90%.
            runbook: Please consider resizing volume
        - alert: PersistentVolumeUsageRapidIncrease
          expr: delta(kubelet_volume_stats_used_bytes{namespace!~"app-.+|maneki|sandbox"}[10m]) / (1024 * 1024 * 1024) > 10
          for: 1m
          labels:
            severity: warning
          annotations:
            summary: Disk usage of `{{ $labels.persistentvolumeclaim }}, {{ $labels.namespace }}` increases rapidly over 10GiB in 10 minutes.
            runbook: TBD

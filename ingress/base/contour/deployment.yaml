apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: contour
  name: contour
  namespace: ingress
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: contour
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: contour
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8002"
        prometheus.io/path: "/stats/prometheus"
        prometheus.io/format: "prometheus"
    spec:
      containers:
      - image: quay.io/cybozu/contour:0.15.0.1
        name: contour
        command: ["contour"]
        args:
        - serve
        - --incluster
        - --insecure
        - --envoy-service-http-port=8080
        - --envoy-service-https-port=8443
        - --config-path=/config/contour.yaml
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
        volumeMounts:
        - name: contour-config
          mountPath: /config
          readOnly: true

      - image: quay.io/cybozu/contour-plus:0.3.0
        name: contour-plus
        env:
        - name: CP_SERVICE_NAME
          value: ingress/contour-global
        - name: CP_DEFAULT_ISSUER_NAME
          value: clouddns
      - image: quay.io/cybozu/envoy:1.11.1.1
        name: envoy
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        command: ["envoy"]
        args:
        - --config-path /config/envoy.json
        - --service-cluster $(CONTOUR_NAMESPACE)
        - --service-node $(ENVOY_POD_NAME)
        - --log-level info
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
             fieldRef:
               apiVersion: v1
               fieldPath: metadata.namespace
        - name: ENVOY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8002
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
        - name: envoy-config
          mountPath: /config
        lifecycle:
          preStop:
            exec:
              command: ["wget", "-qO-", "http://localhost:9001/healthcheck/fail"]
      initContainers:
      - image: quay.io/cybozu/contour:0.15.0.1
        name: envoy-initconfig
        command: ["contour"]
        args:
        - bootstrap
        - /config/envoy.json
        volumeMounts:
        - name: envoy-config
          mountPath: /config
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
      - name: envoy-config
        emptyDir: {}
      - name: contour-config
        configMap:
          name: contour
          defaultMode: 0643
          items:
          - key: contour.yaml
            path: contour.yaml
      dnsPolicy: ClusterFirst
      serviceAccountName: contour
      terminationGracePeriodSeconds: 30
      # The affinity stanza below tells Kubernetes to try hard not to place 2 of
      # these pods on the same node.
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: contour
              topologyKey: "cke.cybozu.com/rack"
---

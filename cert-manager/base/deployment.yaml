apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager-cainjector
  namespace: cert-manager
  labels:
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/component: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/component: cert-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/component: cert-manager
      annotations:
    spec:
      serviceAccountName: cert-manager-cainjector
      containers:
        - name: cainjector
          image: quay.io/cybozu/cert-manager:0.11.0.1
          imagePullPolicy: IfNotPresent
          command:
          - cainjector
          args:
          - --v=2
          - --leader-election-namespace=$(POD_NAMESPACE)
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources:
            {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager
  namespace: cert-manager
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/component: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/component: cert-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/component: cert-manager
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
    spec:
      serviceAccountName: cert-manager
      containers:
        - name: cert-manager
          image: quay.io/cybozu/cert-manager:0.11.0.1
          imagePullPolicy: IfNotPresent
          command:
          - controller
          args:
          - --v=2
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=$(POD_NAMESPACE)
          - --dns01-recursive-nameservers-only
          - --enable-certificate-owner-ref
          - --webhook-namespace=$(POD_NAMESPACE)
          - --webhook-ca-secret=cert-manager-webhook-ca
          - --webhook-serving-secret=cert-manager-webhook-tls
          - --webhook-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc
          ports:
          - containerPort: 9402
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NO_PROXY
            value: 10.0.0.0/8
          - name: HTTP_PROXY
            value: http://squid.internet-egress.svc.cluster.local:3128
          - name: HTTPS_PROXY
            value: http://squid.internet-egress.svc.cluster.local:3128
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager-webhook
  namespace: cert-manager
  labels:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/component: cert-manager
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/component: cert-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: webhook
        app.kubernetes.io/component: cert-manager
      annotations:
    spec:
      serviceAccountName: cert-manager-webhook
      containers:
        - name: webhook
          image: quay.io/cybozu/cert-manager:0.11.0.1
          imagePullPolicy: IfNotPresent
          command:
          - webhook
          args:
          - --v=2
          - --secure-port=6443
          - --tls-cert-file=/certs/tls.crt
          - --tls-private-key-file=/certs/tls.key
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources:
            {}
          volumeMounts:
          - name: certs
            mountPath: /certs
            readOnly: true
          - name: tmp
            mountPath: /tmp
          livenessProbe:
            tcpSocket:
              port: 6443
            initialDelaySeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6443
            initialDelaySeconds: 10
      volumes:
      - name: certs
        secret:
          secretName: cert-manager-webhook-tls
      - name: tmp
        emptyDir: {}
